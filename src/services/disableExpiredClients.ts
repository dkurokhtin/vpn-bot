import User from '../db/models/User';
import { disableClientInXui } from './xuiService';
import logger from '../logger';
import { bot } from '../bot';

export async function disableExpiredClients() {
  const now = new Date();
  logger.info('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫...');
  const expiredUsers = await User.find({
    subscriptionEndsAt: { $lt: now },
    disabled: { $ne: true },
    notifiedExpired: { $ne: true }
  });
  logger.info(`üîé –ù–∞–π–¥–µ–Ω–æ ${expiredUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å—Ç–µ–∫—à–µ–π –ø–æ–¥–ø–∏—Å–∫–æ–π`);
  for (const user of expiredUsers) {
    try {
      if (!user.xrayUuid) {
        logger.warn(`‚ö†Ô∏è –ù–µ—Ç Xray UUID —É ${user.username}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ`);
        continue;
      }

      await disableClientInXui(user.xrayUuid);

      user.disabled = true;
      user.notifiedExpired = true;
      await user.save();

      logger.info(`‚õî VPN –æ—Ç–∫–ª—é—á—ë–Ω –¥–ª—è ${user.username}`);

      if (!user.telegramId) {
        logger.warn(`‚ö†Ô∏è –ù–µ—Ç Telegram ID —É ${user.username}, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ`);
        continue;
      }
      logger.info(`üì® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ Telegram ID ${user.telegramId}`);
      await bot.telegram.sendMessage(
        user.telegramId,
        `‚ùå *–ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞*\n\n–í–∞—à VPN-–¥–æ—Å—Ç—É–ø –≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ß—Ç–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø ‚Äî –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.`,
        {
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üîÅ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'extend' }]
            ]
          }
        }
      );
    } catch (err) {
      logger.error({ err }, `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ ${user.username}`);
    }
  }
}
