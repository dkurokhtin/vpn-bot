import { Markup } from 'telegraf';
import { BotContext } from '../context';
import User from '../../db/models/User';
import { v4 as uuidv4 } from 'uuid';
import { createVpnClient } from '../../services/xuiService';
import { VPN_HOST, VPN_PUBLIC_KEY } from '../../config';

import logger from '../../logger';
import { updateMenu } from '../../utils/updateMenu';
import { escapeMarkdown } from '../../utils/escapeMarkdown';
import { statusCommand } from './status';

export async function acceptPolicy(ctx: BotContext) {
  const guideLink = `https://dkurokhtin.github.io/vpn-docs/#/`;
  const telegramId = ctx.from?.id;

  if (!telegramId) return ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à Telegram ID');

  if (ctx.state.user) {
    if (!ctx.state.user.acceptedPolicy) {
      ctx.state.user.acceptedPolicy = true;
      await ctx.state.user.save();
    }
    return statusCommand(ctx);
  }

  const username = ctx.from?.username || `user_${telegramId}`;
  const uuid = uuidv4();
  const vpnLink = `vless://${uuid}@${VPN_HOST}:443?encryption=none&flow=xtls-rprx-vision&type=tcp&security=reality&fp=chrome&sni=yahoo.com&pbk=${VPN_PUBLIC_KEY}&sid=&spx=%2F#${username}`;

  try {
    await createVpnClient(uuid, username, telegramId);

    await User.create({
      telegramId,
      username,
      balance: 0,
      subscriptionEndsAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 –¥–Ω–µ–π
      xrayUuid: uuid,
      acceptedPolicy: true,
      vpnConfigUrl: vpnLink,
    });

    return updateMenu(
      ctx,
      `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ${escapeMarkdown(username)}!\n\n` +
        `üóìÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ 7 –¥–Ω–µ–π.\n\n` +
        `üîó [–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è](${escapeMarkdown(vpnLink)})\n\n` +
        `\`${escapeMarkdown(vpnLink)}\`\n\n` +
        `üì±*–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é*\n\n –î–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ ‚Äú–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é‚Äù –≤ –º–µ–Ω—é.\n\n` +
        `üí°*–ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç?*\n\n` +
        `‚Äî –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∏ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏\n\n` +
        `‚Äî –ü—Ä–æ–¥–ª–µ–≤–∞—Ç—å –∏ –ø–æ–∫—É–ø–∞—Ç—å VPN\n\n` +
        `‚Äî –ë—ã—Å—Ç—Ä–æ –¥–∞–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\n\n` +
        `‚Äî –ü–æ–º–æ–≥–∞—Ç—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π\n\n` +
        `‚Äî –†–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö\n\n` +
        `‚ùó*–í–∞–∂–Ω–æ*: –ú—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –Ω–µ –≤–µ–¥—ë–º –ª–æ–≥–∏. Dkvpn ‚Äî –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.\n\n` +
        `*–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:*`,
        Markup.inlineKeyboard([
          [Markup.button.callback('üìã –ú–µ–Ω—é', 'menu')],
          [Markup.button.url('üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é', guideLink)],
        ]),
      { forceNew: true }
    );
  } catch (error: any) {
    logger.error({ err: error }, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ –≤ XUI');
    return ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å VPN-–¥–æ—Å—Ç—É–ø. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.');
  }
}

export async function startCommand(ctx: BotContext) {
  const privacyLink =
    'https://github.com/dkurokhtin/vpn-docs/blob/main/vpn_legal_docs.md';
  const telegramId = ctx.from?.id;

  if (!telegramId) return ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à Telegram ID');

  // –í—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–µ–ª –æ—Ç–≤–µ—Ç –≤–Ω–∏–∑—É —á–∞—Ç–∞
  delete (ctx.session as any).menuMessageId;

  try {
    let user = ctx.state.user;

    if (!user) {
      user = await User.findOne({ telegramId });
      if (user) {
        ctx.state.user = user;
      }
    }

    if (user?.acceptedPolicy) {
      await statusCommand(ctx);
      return;
    }
  } catch (err) {
    logger.error({ err }, 'Failed to handle start command');
  }

  const username = ctx.from?.username || `user_${telegramId}`;

  return updateMenu(
    ctx,
    `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${escapeMarkdown(
      username
    )}!\n–ü–µ—Ä–µ–¥ –ø–æ–ª—É—á–µ–Ω–∏–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π 7-–¥–Ω–µ–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.`,

    Markup.inlineKeyboard([
      [Markup.button.url('üìÑ –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏', privacyLink)],
      [Markup.button.callback('‚úÖ –Ø —Å–æ–≥–ª–∞—Å–µ–Ω', 'accept_policy')],
    ])
  );
}
